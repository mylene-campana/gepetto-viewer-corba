#include <QtGui/QApplication>
#include <QSettings>
#include <QCleanlooksStyle>
#include <QProcessEnvironment>
#include <QSplashScreen>

#include "gepetto/gui/safeapplication.hh"
#include "gepetto/gui/mainwindow.hh"
#include "gepetto/gui/dialog/pluginmanagerdialog.hh"
#include "gepetto/gui/settings.hh"

using namespace gepetto::gui;

void setupApplication ()
{
  QCoreApplication::setOrganizationName("gepetto-gui");
  QCoreApplication::setOrganizationDomain("https://github.com/jmirabel/gepetto-viewer-corba");
  QCoreApplication::setApplicationName("gepetto-gui");
  QCoreApplication::setApplicationVersion("@PROJECT_VERSION@");

  QIcon::setThemeName("oxygen");
}

int main(int argc, char *argv[])
{
  QApplication::setAttribute(Qt::AA_X11InitThreads);

  SafeApplication a(argc, argv);
  a.setStyle(new QCleanlooksStyle);

  setupApplication();

  Settings settings ("@CMAKE_INSTALL_PREFIX@");
  settings.setupPaths ();
  switch (settings.fromArgv (argc, argv)) {
    case 0:
      break;
    case 1:
      return 0;
    case 2:
      return 1;
    default:
      qDebug () << "Settings.fromArgv returned unknow error code";
      break;
  }
  settings.fromFiles ();

  QPixmap pixmap(":/img/gepetto.png");
  QSplashScreen splash(pixmap);
  splash.show();
  a.processEvents ();

  MainWindow w (&settings);
  settings.setMainWindow (&w);
  settings.initPlugins ();
  w.connect (&a, SIGNAL (log(QString)), SLOT (logError(const QString&)));
  w.show();
  splash.finish(&w);
  return a.exec();
}
